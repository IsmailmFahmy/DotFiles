#!/bin/sh
User_Home=$(eval echo ~${SUDO_USER})
conf=$User_Home/.config
date=$(date +%d-%m)

{
    git submodule update --init --recursive > /dev/null & echo "Updating submodules"
} || {
    echo "Error updating submodules"
}

function backup {
    if [[ ! -d "$conf/BackupOf-$date" ]]; then
        mkdir $conf/BackupOf-$date > /dev/null
        echo "Created $conf/BackupOf-$date"
    fi
    {
        mv $conf/$1 "$conf/BackupOf-$date/" > /dev/null
        echo "Moved $1 to BackupOf-$date"
    } || {
	echo "Error moving $1 to BackupOf-$date"
    }
}


#move files into .config

{
    if [[ -d $conf/nvim ]]; then 
        backup "nvim"
    fi
    cp -r nvim $conf/ > /dev/null
    echo "Copied nvim"
} || {
    echo "Error copying nvim"
}


{
    if [[ -d $conf/qtile ]]; then
        backup "qtile"
    fi
    cp -r qtile $conf/ > /dev/null
    echo "Copied qtile"
} || {
    echo "Error copying qtile"
}


{
    if [[ -d $conf/fish ]]; then
        backup "fish"
    fi
    cp -r fish $conf/ > /dev/null
    echo "Copied fish"
} || {
    echo "Error copying fish"
}


{
    if [[ -d $conf/gh ]]; then
        backup "gh"
    fi
    cp -r gh $conf/ > /dev/null
    echo "Copied gh"
} || {
    echo "Error copying gh"
}

{
    if [[ -d $conf/kitty ]]; then
        backup "kitty"
    fi
    cp -r kitty $conf/ > /dev/null
    echo "Copied kitty"
} || {
    echo "Error copying kitty"
}

{
    if [[ -d $conf/starship.toml ]]; then
        backup "starship.toml"
    fi
    cp -r starship.toml $conf/ > /dev/null
    echo "Copied starship.toml"
} || {
    echo "Error copying starship.toml"
}

{
    sudo cp -rf Fonts/* /usr/share/fonts/ > /dev/null
    echo "Copied fonts to /usr/share/fonts"
} || {
    echo "Error copying fonts to /usr/share/fonts"
}

